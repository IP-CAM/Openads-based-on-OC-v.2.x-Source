<?php
class ControllerReportReport extends Controller {

	public function index(){
		$this->language->load('report/report');

		$this->document->setTitle($this->language->get('heading_title'));
		
		$this->load->model('report/report');

        $this->getList();
	}

    protected function getList() {


        if (isset($this->request->get['filter_mode'])) {
            $filter_mode = (int)$this->request->get['filter_mode'];
        } else {
            $filter_mode = null;
        }

        if (isset($this->request->get['filter_product_id'])) {
            $filter_product_id = (int)$this->request->get['filter_product_id'];
        } else {
            $filter_product_id = null;
        }

        if (isset($this->request->get['filter_customer_id'])) {
            $filter_customer_id = (int)$this->request->get['filter_customer_id'];
        } else {
            $filter_customer_id = null;
        }

        if (isset($this->request->get['filter_user_id'])) {
            $filter_user_id = (int)$this->request->get['filter_user_id'];
        } else {
            $filter_user_id = null;
        }

        if (isset($this->request->get['filter_status'])) {
            $filter_status = (int)$this->request->get['filter_status'];
        } else {
            $filter_status = null;
        }

        if (isset($this->request->get['filter_time_range'])) {
            $filter_time_range = (int)$this->request->get['filter_time_range'];
        } else {
            $filter_time_range = null;
        }

        if (isset($this->request->get['filter_date_start'])) {
            $filter_date_start = trim($this->request->get['filter_date_start']);
        } else {
            $filter_date_start = null;
        }

        if (isset($this->request->get['filter_date_end'])) {
            $filter_date_end = trim($this->request->get['filter_date_end']);
        } else {
            $filter_date_end = null;
        }
        
        if (isset($this->request->get['sort'])) {
            $sort = $this->request->get['sort'];
        } else {
            $sort = 'r.user_id';
        }

        if (isset($this->request->get['order'])) {
            $order = $this->request->get['order'];
        } else {
            $order = 'ASC';
        }

        if (isset($this->request->get['page'])) {
            $page = $this->request->get['page'];
        } else {
            $page = 1;
        }

        $url = '';


        if (isset($this->request->get['filter_mode'])) {
            $url .= '&filter_mode=' . (int)$this->request->get['filter_mode'];
        }

        if (isset($this->request->get['filter_product_id'])) {
            $url .= '&filter_product_id=' . (int)$this->request->get['filter_product_id'];
        }

        if (isset($this->request->get['filter_customer_id'])) {
            $url .= '&filter_customer_id=' . (int)$this->request->get['filter_customer_id'];
        }

        if (isset($this->request->get['filter_user_id'])) {
            $url .= '&filter_user_id=' . (int)$this->request->get['filter_user_id'];
        }

        if (isset($this->request->get['filter_status'])) {
            $url .= '&filter_status=' . (int)$this->request->get['filter_status'];
        }

        if (isset($this->request->get['filter_time_range'])) {
            $url .= '&filter_time_range=' . (int)$this->request->get['filter_time_range'];
        }

        if (isset($this->request->get['filter_date_start'])) {
            $url .= '&filter_date_start=' . urlencode(html_entity_decode(trim($this->request->get['filter_date_start']), ENT_QUOTES, 'UTF-8'));
        }

        if (isset($this->request->get['filter_date_end'])) {
            $url .= '&filter_date_end=' . urlencode(html_entity_decode(trim($this->request->get['filter_date_end']), ENT_QUOTES, 'UTF-8'));
        }

        if (isset($this->request->get['sort'])) {
            $url .= '&sort=' . $this->request->get['sort'];
        }

        if (isset($this->request->get['order'])) {
            $url .= '&order=' . $this->request->get['order'];
        }

        if (isset($this->request->get['page'])) {
            $url .= '&page=' . $this->request->get['page'];
        }

        $data['breadcrumbs'] = array();

        $data['breadcrumbs'][] = array(
            'text' => $this->language->get('text_home'),
            'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], 'SSL')
        );

        $data['breadcrumbs'][] = array(
            'text' => $this->language->get('heading_title'),
            'href' => $this->url->link('report/report', 'token=' . $this->session->data['token'] . $url, 'SSL')
        );

        $data['records'] = array();

        $filter = array(         
            'filter_mode'          => $filter_mode,
            'filter_product_id'	=> $filter_product_id,
            'filter_customer_id'        => $filter_customer_id,           
            'filter_user_id'            => $filter_user_id,
            'filter_status'      		=> $filter_status,
            'filter_time_range'         => $filter_time_range,
            'filter_date_start'      	=> $filter_date_start,
            'filter_date_end'           => $filter_date_end,
            'sort'      				=> $sort,
            'order'     				=> $order,
            'start'                     => ($page - 1) * 20,
            'limit'                     => 20
        );

        $results  = $this->model_report_report->getAdReport($filter);

        $data['total_score'] = $this->model_report_report->getTotalScore($filter);
        foreach ($results as $result) {
            $targeting_data = $this->model_report_report->getUserModeReport($result['user_id'],array('mode'=>'targeting'));
            $post_data = $this->model_report_report->getUserModeReport($result['user_id'],array('mode'=>'post'));
            $photo_data = $this->model_report_report->getUserModeReport($result['user_id'],array('mode'=>'photo'));
            $data['records'][] = array(
                'operator'          => $result['operator'],
                'score'             => $result['score'],
                'min_date'          => date('Y-m-d H:i:s',strtotime($result['min_date'])),
                'max_date'          => date('Y-m-d H:i:s',strtotime($result['max_date'])),
                'targeting'         => $this->load_mode_data($result['targeting_score'],$targeting_data),
                'post'              => $this->load_mode_data($result['post_score'],$post_data),
                'photo'             => $this->load_mode_data($result['photo_score'],$photo_data),
            );
        }
        $record_total = count($data['records']);

        $data['heading_title'] = $this->language->get('heading_title');

        $data['text_enabled'] = $this->language->get('text_enabled');
        $data['text_disabled'] = $this->language->get('text_disabled');
        $data['text_yes'] = $this->language->get('text_yes');
        $data['text_no'] = $this->language->get('text_no');
        $data['text_select'] = $this->language->get('text_select');
        $data['text_none'] = $this->language->get('text_none');
        $data['text_no_results'] = $this->language->get('text_no_results');
        $data['text_list'] = $this->language->get('text_list');

        $data['entry_entry_id'] = $this->language->get('entry_entry_id');
        $data['entry_advertise'] = $this->language->get('entry_advertise');
        $data['entry_product'] = $this->language->get('entry_product');
        $data['entry_customer'] = $this->language->get('entry_customer');
        $data['entry_mode'] = $this->language->get('entry_mode');

        $data['entry_status'] = $this->language->get('entry_status');
        $data['entry_time_range'] = $this->language->get('entry_time_range');
        $data['entry_yesterday'] = $this->language->get('entry_yesterday');
        $data['entry_thisweek'] = $this->language->get('entry_thisweek');
        $data['entry_lastweek'] = $this->language->get('entry_lastweek');
        $data['entry_thismonth'] = $this->language->get('entry_thismonth');
        $data['entry_lastmonth'] = $this->language->get('entry_lastmonth');
        $data['entry_thisyear'] = $this->language->get('entry_thisyear');
        $data['entry_lastyear'] = $this->language->get('entry_lastyear');
        $data['entry_custom'] = $this->language->get('entry_custom');
        $data['entry_date_start'] = $this->language->get('entry_date_start');
        $data['entry_date_end'] = $this->language->get('entry_date_end');

        $data['column_entry_id'] = $this->language->get('column_entry_id');
        $data['column_advertise'] = $this->language->get('column_advertise');
        $data['column_product'] = $this->language->get('column_product');
        $data['column_customer'] = $this->language->get('column_customer');
        $data['column_operator'] = $this->language->get('column_operator');
        $data['column_mode'] = $this->language->get('column_mode');
        $data['column_status'] = $this->language->get('column_status');
        $data['column_score'] = $this->language->get('column_score');
        $data['column_date'] = $this->language->get('column_date');
        $data['column_qty'] = $this->language->get('column_qty');
        $data['column_action'] = $this->language->get('column_action');
        $data['column_status_score'] = $this->language->get('column_status_score');
        $data['column_targeting'] = $this->language->get('column_targeting');
        $data['column_post'] = $this->language->get('column_post');
        $data['column_photo'] = $this->language->get('column_photo');

        $data['button_filter'] = $this->language->get('button_filter');
        $data['button_reset'] = $this->language->get('button_reset');
        $data['button_cancel'] = $this->language->get('button_cancel');

        $data['reset'] = $this->url->link('report/report', 'token='.$this->session->data['token'],'SSL');
        $data['cancel'] = $this->url->link('common/dashboard', 'token='.$this->session->data['token'],'SSL');

        $data['token'] = $this->session->data['token'];

        if (isset($this->session->data['success'])) {
            $data['success'] = $this->session->data['success'];

            unset($this->session->data['success']);
        } else {
            $data['success'] = '';
        }

        if (isset($this->session->data['warning'])) {
            $data['error_warning'] = $this->session->data['warning'];

            unset($this->session->data['warning']);
        } else {
            $data['error_warning'] = '';
        }

        $url = '';

        if (isset($this->request->get['filter_mode'])) {
            $url .= '&filter_mode=' . (int)$this->request->get['filter_mode'];
        }

        if (isset($this->request->get['filter_product_id'])) {
            $url .= '&filter_product_id=' . (int)$this->request->get['filter_product_id'];
        }

        if (isset($this->request->get['filter_customer_id'])) {
            $url .= '&filter_customer_id=' . (int)$this->request->get['filter_customer_id'];
        }

        if (isset($this->request->get['filter_user_id'])) {
            $url .= '&filter_user_id=' . (int)$this->request->get['filter_user_id'];
        }

        if (isset($this->request->get['filter_status'])) {
            $url .= '&filter_status=' . (int)$this->request->get['filter_status'];
        }

        if (isset($this->request->get['filter_time_range'])) {
            $url .= '&filter_time_range=' . (int)$this->request->get['filter_time_range'];
        }

        if (isset($this->request->get['filter_date_start'])) {
            $url .= '&filter_date_start=' . urlencode(html_entity_decode(trim($this->request->get['filter_date_start']), ENT_QUOTES, 'UTF-8'));
        }

        if (isset($this->request->get['filter_date_end'])) {
            $url .= '&filter_date_end=' . urlencode(html_entity_decode(trim($this->request->get['filter_date_end']), ENT_QUOTES, 'UTF-8'));
        }

        if ($order == 'ASC') {
            $url .= '&order=DESC';
        } else {
            $url .= '&order=ASC';
        }

        if (isset($this->request->get['page'])) {
            $url .= '&page=' . $this->request->get['page'];
        }
        $data['sort_mode'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=vp.mode' . $url, 'SSL');
        $data['sort_status'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=vp.status' . $url, 'SSL');
        $data['sort_qty'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=qty' . $url, 'SSL');
        $data['sort_score'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=score' . $url, 'SSL');
        $data['sort_operator'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=operator' . $url, 'SSL');
        $data['sort_product'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=product' . $url, 'SSL');
        
        $data['sort_targeting'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=targeting_score' . $url, 'SSL');
        $data['sort_post'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=post_score' . $url, 'SSL');
        $data['sort_photo'] = $this->url->link('report/report', 'token=' . $this->session->data['token'] . '&sort=photo_score' . $url, 'SSL');
        $url = '';

        if (isset($this->request->get['filter_mode'])) {
            $url .= '&filter_mode=' . (int)$this->request->get['filter_mode'];
        }

        if (isset($this->request->get['filter_product_id'])) {
            $url .= '&filter_product_id=' . (int)$this->request->get['filter_product_id'];
        }

        if (isset($this->request->get['filter_entry'])) {
            $url .= '&filter_entry=' . urlencode(html_entity_decode(trim($this->request->get['filter_entry']), ENT_QUOTES, 'UTF-8'));
        }

        if (isset($this->request->get['filter_customer_id'])) {
            $url .= '&filter_customer_id=' . (int)$this->request->get['filter_customer_id'];
        }

        if (isset($this->request->get['filter_user_id'])) {
            $url .= '&filter_user_id=' . (int)$this->request->get['filter_user_id'];
        }

        if (isset($this->request->get['filter_status'])) {
            $url .= '&filter_status=' . (int)$this->request->get['filter_status'];
        }

        if (isset($this->request->get['filter_time_range'])) {
            $url .= '&filter_time_range=' . (int)$this->request->get['filter_time_range'];
        }

        if (isset($this->request->get['filter_date_start'])) {
            $url .= '&filter_date_start=' . urlencode(html_entity_decode(trim($this->request->get['filter_date_start']), ENT_QUOTES, 'UTF-8'));
        }

        if (isset($this->request->get['filter_date_end'])) {
            $url .= '&filter_date_end=' . urlencode(html_entity_decode(trim($this->request->get['filter_date_end']), ENT_QUOTES, 'UTF-8'));
        }

        if (isset($this->request->get['sort'])) {
            $url .= '&sort=' . $this->request->get['sort'];
        }

        if (isset($this->request->get['order'])) {
            $url .= '&order=' . $this->request->get['order'];
        }

        $pagination = new Pagination();
        $pagination->total = $record_total;
        $pagination->page = $page;
        $pagination->limit = $this->config->get('config_limit_admin');
        $pagination->url = $this->url->link('report/report', 'token=' . $this->session->data['token'] . $url . '&page={page}', 'SSL');

        $data['pagination'] = $pagination->render();

        $data['results'] = sprintf($this->language->get('text_pagination'), ($record_total) ? (($page - 1) * $this->config->get('config_limit_admin')) + 1 : 0, ((($page - 1) * $this->config->get('config_limit_admin')) > ($record_total - $this->config->get('config_limit_admin'))) ? $record_total : ((($page - 1) * $this->config->get('config_limit_admin')) + $this->config->get('config_limit_admin')), $record_total, ceil($record_total / $this->config->get('config_limit_admin')));

        $data['filter_mode']= $filter_mode;
        $data['filter_product_id']= $filter_product_id;
        $data['filter_customer_id']= $filter_customer_id;
        $data['filter_user_id']= $filter_user_id;
        $data['filter_status']= $filter_status;
        $data['filter_time_range']= $filter_time_range;
        $data['filter_date_start']= $filter_date_start;
        $data['filter_date_end']= $filter_date_end;
        $data['sort'] = $sort;
        $data['order'] = $order;

		$this->load->model('catalog/product');
        $data['products'] = $this->model_catalog_product->getProducts();

        $this->load->model('localisation/advertise_targeting');
        $data['targeting_statuses'] = $this->model_localisation_advertise_targeting->getAdvertiseTargetings();

        $this->load->model('localisation/advertise_post');
        $data['post_statuses'] = $this->model_localisation_advertise_post->getAdvertisePosts();

        $this->load->model('localisation/advertise_photo');
        $data['photo_statuses'] = $this->model_localisation_advertise_photo->getAdvertisePhotos();

        $this->load->model('localisation/advertise_publish');
        $data['ad_publishes'] = $this->model_localisation_advertise_publish->getAdvertisePublishes();

        $this->load->model('user/user');
        $data['contributors'] = $this->model_user_user->getUsersByGroupKey('contributor');

        $data['header'] = $this->load->controller('common/header');
        $data['column_left'] = $this->load->controller('common/column_left');
        $data['footer'] = $this->load->controller('common/footer');

        $this->response->setOutput($this->load->view('report/report.tpl', $data));
    }

    private function load_mode_data($total_score,$mode_data) {

        $data['total_score'] = $total_score;
        $data['mode_data'] = $mode_data;
        $data['column_status'] = $this->language->get('column_status');
        $data['column_status_name'] = $this->language->get('column_status_name');
        $data['column_status_score'] = $this->language->get('column_status_score');
        $data['column_qty'] = $this->language->get('column_qty');
        $data['column_score'] = $this->language->get('column_score');
        return $this->load->view('report/report_mode.tpl', $data);
    }

	public function detail(){
		$this->language->load('report/detail');

		$this->document->setTitle($this->language->get('heading_title'));
		
		$this->load->model('report/report');

		$data['breadcrumbs'] = array();

   		$data['breadcrumbs'][] = array(
       		'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),       		
      		'separator' => false
   		);
   		$data['breadcrumbs'][] = array(
       		'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('report/report', 'token=' . $this->session->data['token'], 'SSL'),
      		'separator' => ' :: '
   		);

   		$data['token'] = $this->session->data['token'];
		$data['heading_title'] = $this->language->get('heading_title');
		
		$data['text_all_users'] = $this->language->get('text_all_users');
		$data['text_none'] = $this->language->get('text_none');
		$data['text_no_results'] = $this->language->get('text_no_results');
		
		$data['tab_status'] = $this->language->get('tab_status');
		$data['tab_publish'] = $this->language->get('tab_publish');
		$data['tab_auditor'] = $this->language->get('tab_auditor');
		$data['tab_product'] = $this->language->get('tab_product');
		$data['tab_author'] = $this->language->get('tab_author');

		$data['title_photo_fbaccount'] = $this->language->get('title_photo_fbaccount');
		$data['title_fbaccount'] = $this->language->get('title_fbaccount');
		$data['title_fbpage'] = $this->language->get('title_fbpage');
        $data['title_message'] = $this->language->get('title_message');
        $data['title_ads'] = $this->language->get('title_ads');
		$data['column_status'] = $this->language->get('column_status');
		$data['column_name'] = $this->language->get('column_name');
		$data['column_posts'] = $this->language->get('column_posts');
		$data['column_publish'] = $this->language->get('column_publish');
		$data['column_product'] = $this->language->get('column_product');
		$data['column_auditor'] = $this->language->get('column_auditor');
		$data['column_author'] = $this->language->get('column_author');
		$data['column_photo_fbaccount'] = $this->language->get('column_photo_fbaccount');
		$data['column_fbaccount'] = $this->language->get('column_fbaccount');
		$data['column_fbpage'] = $this->language->get('column_fbpage');
		$data['column_total'] = $this->language->get('column_total');

		$data['button_filter'] = $this->language->get('button_filter');

   		if (isset($this->error['warning'])) {
			$data['error_warning'] = $this->error['warning'];
		} else {
			$data['error_warning'] = '';
		}
		
		if (isset($this->session->data['success'])) {
			$data['success'] = $this->session->data['success'];
		
			unset($this->session->data['success']);
		} else {
			$data['success'] = '';
		}
		//pane status
		$data['photo_fbaccount_status'] = $this->model_report_report->postStatistics('status_fbaccount_photo');
		$data['fbaccount_status'] = $this->model_report_report->postStatistics('status_fbaccount');
		$data['fbpage_status'] = $this->model_report_report->postStatistics('status_fbpage');

		//pane publish
		$data['photo_fbaccount_publish'] = $this->model_report_report->postStatistics('publish_fbaccount_photo');
		$data['fbaccount_publish'] = $this->model_report_report->postStatistics('publish_fbaccount');
		$data['fbpage_publish'] = $this->model_report_report->postStatistics('publish_fbpage');

		// pane products
		$data['post_product'] =  $this->model_report_report->postStatistics('product');
		
		//pane auditor
		$data['post_auditor'] = $this->model_report_report->postStatistics('auditor');

		//pane author
		$data['post_author'] = $this->model_report_report->postStatistics('author');

		$this->template = 'report/detail.tpl';
		$this->children = array(
			'common/header',	
			'common/footer'	
		);
		$this->response->setOutput($this->render());
	}


    public function ajax_data(){
        $this->language->load('report/report');
        $action = isset($this->request->post['action']) ? strtolower(trim($this->request->post['action'])) : 'get';
        $this->load->model('report/report');
        switch ($action) {

            case 'statistics':
                $result = $this->model_report_report->do_statistics();
                $json = array('status'=>1,'msg'=>$result);
        }

        $this->response->setOutput(json_encode($json));
    }
}